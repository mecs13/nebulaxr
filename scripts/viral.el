(defun models/viral (y0 share-factor share-views conversion-factor t-max)
  (let* ((share--factor 0.2)
         (share--views 100)
         (conversion--factor 0.1)
         (f (* share-factor share-views conversion-factor))
         (y `(0 ,y0))
         (i 1)
         (result '((i y) hline)))
    (while (< i t-max)
      (setq y (append y
                      (list (+ (nth i y)
                               (* f
                                  (- (nth i y)
                                     (nth (- i 1)
                                          y)))))))
      (setq result (append result (list (list i (nth i y)))))
      (setq i (+ i 1)))
    y))

(defun models/viral-table (params t-max)
  (let ((i 0)
        (j 1)
        (k 0)
        (results nil)
        (table `(hline ,(append '(Iteration)
                          (mapcar (lambda (e)
                                    (format "Model %s" e))
                                  (number-sequence 1
                                                   (length params))))
                 hline)))
    (while (< i (length params))
      (let* ((y0 (car (nth i params)))
             (share-factor (nth 1 (nth i params)))
             (share-views (nth 2 (nth i params)))
             (conversion-factor (nth 3 (nth i params)))
             (y (models/viral y0 share-factor share-views conversion-factor t-max)))
        (setq results (append results
                              `(,y)))
        (setq i (+ i 1))))
    (while (< j (length (car results)))
      (let ((line `(,(append `(,j)
                             (mapcar (lambda (e)
                                       (nth j e))
                                     results)))))
        (setq table (append table line)))
      (setq j (+ 1 j)))
    table))
